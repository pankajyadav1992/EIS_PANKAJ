@model EmployeeInformationSystem.Core.Models.EmployeeLeaveDetails
@{
    ViewBag.Title = "Leave Type";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/bootstrap-select")
@Styles.Render("~/Content/gijgo")
<header class="page-header @ViewBag.HeadingColor  text-white">
    <div class="container-fluid">
        <h2 class="no-margin-bottom">@ViewBag.HeadingName </h2>
    </div>
</header>
<!-- Forms Section-->
<section class="forms">
    @if (ViewBag.Msg == null)
    {
        <div class="container-fluid" style="position:relative">
            <div class="container-fluid">
                <div class="row" id="reportDisplayBlock">
                    <div class="col-lg-12">
                        <div class="card">
                                @using (Html.BeginForm("ApplyLeaveApplication", "Leave", FormMethod.Post, new { @class = "form-horizontal", @data_heading = "Add Leave Type" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="card-body">
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Employee Name</label>
                                    <div class="col-sm-4">
                                        <select name="EmployeeId" class="form-control" id="selectEmployeeByName" style="min-width:80%;" data-live-search="false">
                                            <option value="0" selected>--Select Employee--</option>
                                            @foreach (var emp in ViewBag.EmlployeeTypeList)
                                            {
                                                <option value="@emp.Id" data-employeetype="@emp.FirstName">@emp.FirstName @emp.MiddleName @emp.LastName</option>
                                            }
                                            @*@foreach (var employee in ViewBag.EmlployeeTypeList)
                                            {
                                                if (employee.Name == ViewBag.OName)
                                                {
                                                    <option value="@employee.Id" data-employeetype="@employee.Name" selected>@employee.Name</option>
                                                }
                                                else
                                                {
                                                    <option value="@employee.Id" data-employeetype="@employee.Name">@employee.Name</option>
                                                }
                                            }*@
                                        </select>
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none;color: red;" id="errorEmployeeId">Please Select Employee Name</div>
                                    </div>
                                </div>                               
                                
                                        <div id="partialDiv">
                                            @Html.Partial("_OrgPartial")
                                        </div>
                                 <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">From Date</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.LeaveFrom, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off" } })
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none;color: red; " id="errorLeaveFrom">Please Enter From Date</div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">To Date</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.LeaveTill, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off" } })
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none;color: red;" id="errorLeaveTill">Please Enter To Date</div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">No. of days</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.NoOfDays, new { htmlAttributes = new { @class = "form-control", @type = "number", @data_type = "number", autocomplete = "off" } })
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none;color: red;" id="errorNoOfDays">Please Enter No. of days</div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Prefix</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.PrefixFrom, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off", @disabled = "disabled" } })
                                    </div>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.PrefixTill, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off", @disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Suffix</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.SuffixFrom, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off", @disabled = "disabled" } })
                                    </div>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.SuffixTill, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "date", autocomplete = "off", @disabled = "disabled" } })
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Purpose</label>
                                    <div class="col-sm-4">
                                        @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "text", autocomplete = "off" } })
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none; color: red;" id="errorPurpose">Please Enter Purpose</div>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Station Leave</label>
                                    <div class="col-sm-4">
                                        @*@Html.EditorFor(model => model.StationLeave, new { htmlAttributes = new { @class = "form-control", @type = "text", @data_type = "text" } })*@
                                        @Html.RadioButtonFor(model => model.StationLeave, true, new { @class = "radio-template requiredField", @id = "True" }) Yes&nbsp;&nbsp;
                                        @Html.RadioButtonFor(model => model.StationLeave, false, new { @class = "radio-template requiredField", @id = "False" }) No
                                    </div>
                                    <div class="col-sm-4">
                                        <div classs="col-sm-9 align-left" style="display:none; color: red;" id="errorStationLeave">Please Enter No of Leaves</div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label class="form-control-label col-sm-3 d-flex justify-content-center">Station Leave Reason</label>
                                    <div class="col-sm-4">
                                        @Html.TextAreaFor(model => model.NoOfDays, new { htmlAttributes = new { @Width = "500px", @class = "form-control", @type = "textarea", @data_type = "text", autocomplete = "off" } })
                                    </div>
                                    <div class="form-group row offset-sm-3">
                                        <div classs="col-sm-9" style="display:none;color: red;" id="errorNoOfDays">Please Enter No of Leaves</div>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-9 offset-sm-4">
                                        <input type="submit" value="Apply" class="btn btn-primary" id="ApplyLeaveBtn">
                                    </div>
                                </div>
                            </div>
                                }

                            </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container-fluid" style="position:relative">
            <div class="container-fluid">
                <div class="row" id="reportDisplayBlock">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body" id="reportDisplayBody">
                                <p>@ViewBag.Msg</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    </section>
    @section Scripts{
        @Scripts.Render("~/bundles/bootstrap-select")
        @Scripts.Render("~/bundles/gijgo")
<script>
    $(document).ready(function () {
        $('select').selectpicker();
        $('[data-type="date"]').each(function () {
            $(this).datepicker({
                uiLibrary: 'bootstrap',
                format: 'dd-mm-yyyy'
            });
        });


        $("#@Html.IdFor(model => model.LeaveFrom)").on('change', function () {
             var myDate = $(this).val();
            myDate = myDate.split("-");
            var newDate = myDate[2] + "-" + myDate[1] + "-" + myDate[0];
            var my_ddate = new Date(newDate).getTime();
            var currentDate = new Date(newDate);
            var dayweek = currentDate.getDay();
            //alert(dayweek);
            var result1 = new Date(currentDate);
            var result2 = new Date(currentDate);
            if (dayweek == 1)
            {
                result1.setDate(result1.getDate() + 1);
                $("#@Html.IdFor(model => model.PrefixFrom)").val(("0" + result1.getDate()).slice(-2) + '-' + ("0" + (result1.getMonth() + 1)).slice(-2) + '-' + result1.getFullYear());
                result2.setDate(result2.getDate() + 2);
                $("#@Html.IdFor(model => model.PrefixTill)").val(("0" + result2.getDate()).slice(-2) + '-' + ("0" + (result2.getMonth() + 1)).slice(-2) + '-' + result2.getFullYear());
               $("#@Html.IdFor(model => model.SuffixFrom)").val("");
                $("#@Html.IdFor(model => model.SuffixTill)").val("");
            }
            if (dayweek == 5)
            {
                 result1.setDate(result1.getDate() -2);
                $("#@Html.IdFor(model => model.SuffixFrom)").val(("0" + result1.getDate()).slice(-2) + '-' + ("0" + (result1.getMonth() + 1)).slice(-2) + '-' + result1.getFullYear());
                result2.setDate(result2.getDate() - 1);
                $("#@Html.IdFor(model => model.SuffixTill)").val(("0" + result2.getDate()).slice(-2) + '-' + ("0" + (result2.getMonth() + 1)).slice(-2) + '-' + result2.getFullYear());
                $("#@Html.IdFor(model => model.PrefixFrom)").val("");
                $("#@Html.IdFor(model => model.PrefixTill)").val("");
            }
            $("#@Html.IdFor(model => model.LeaveTill)").val('');
        });



        $("#@Html.IdFor(model => model.LeaveTill)").on('change', function () {
            var ToDate = $(this).val().split("-");
            var NewToDate = ToDate[0] + "/" + ToDate[1] + "/" + ToDate[2];
            var FromDate = $('#@Html.IdFor(model => model.LeaveFrom)').val().split("-");
            var NewFromDate = FromDate[0] + "/" + FromDate[1] + "/" + FromDate[2];
            let res = CompareTwoDates(NewToDate, NewFromDate);
            if (res == false) {
                $("#@Html.IdFor(model => model.LeaveTill)").val('');
                alert("To Date should be greater than From Date");
                return res;
            }
        });

        function CompareTwoDates(endDate, startDate)
        {
            // date formate dd/mm/yyyy
            let valnull = false;
            if (endDate != "" && startDate != "") {
                let date1 = endDate.split('/');
                let date2 = startDate.split('/');
                let d3 = new Date(date1[1] + '/' + date1[0] + '/' + date1[2]);
                let d4 = new Date(date2[1] + '/' + date2[0] + '/' + date2[2]);
                 return d3 >= d4 ? true : false;
                console.log(DateDiff.diffYear, DateDiff.diffmonth, DateDiff.diffdate, valnull);
            }
            else {
                return false;
            }
            return valnull;
        }




        $(document).on('change', '#selectEmployeeByName', function () {
            var empid = $(this).children(":selected").val();
            //alert(empid);
            $.ajax(
                {
                    url: '../Leave/GetOrganisation_Leave?EmployeeId=' + empid,
                    type: 'GET',
                    data: "",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#partialDiv").html(data);
                    },
                    error: function () {
                        alert("error");
                    }
                });
        });

        $(document).on('click', '#ApplyLeaveBtn', function (e) {
           var isValid = true;
           var australianDate = /^(?=\d)(?:(?:31(?!.(?:0?[2469]|11))|(?:30|29)(?!.0?2)|29(?=.0?2.(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(?:\x20|$))|(?:2[0-8]|1\d|0?[1-9]))([-./])(?:1[012]|0?[1-9])\1(?:1[6-9]|[2-9]\d)?\d\d(?:(?=\x20\d)\x20|$))?(((0?[1-9]|1[012])(:[0-5]\d){0,2}(\x20[AP]M))|([01]\d|2[0-3])(:[0-5]\d){1,2})?$|^$/;

            if ($("#selectEmployeeByName").val() == 0)
            {
                $("#errorEmployeeId").show();
                isValid = false;
            } else{                $("#errorEmployeeId").hide();            }

            if ($("#selectOrganisationByName").val() == 0)
            {
                $("#errorOrganisationId").show(); isValid = false;
            }
            else {
                $("#errorOrganisationId").hide();
            }

            if ($("#selectLeaveTypeName").val() == 0)
            {
                $("#errorLeaveId").show(); isValid = false;
            } else {
                $("#errorLeaveId").hide();
            }

             if ($("#@Html.IdFor(model => model.LeaveFrom)").val() == "")
             {
                 $("#errorLeaveFrom").show(); isValid = false;
             }
             else
             { $("#errorLeaveFrom").hide(); }

             if ($("#@Html.IdFor(model => model.LeaveTill)").val() == "")
             {
                 $("#errorLeaveTill").show(); isValid = false;
             }
             else
             { $("#errorLeaveTill").hide(); }

             if ($("#@Html.IdFor(model => model.NoOfDays)").val() == "")
             {
                 $("#errorNoOfDays").show(); isValid = false;
             }
             else
             { $("#errorNoOfDays").hide(); }

             if ($("#@Html.IdFor(model => model.Purpose)").val() == "")
             {
                 $("#errorPurpose").show(); isValid = false;
             }
             else { $("#errorPurpose").hide();            }

            if (!isValid) {
                e.preventDefault(); //prevent the default action
            } else {
                $('#overlay').fadeIn(); // show spinner
            }
        });
        });
</script>

    }
